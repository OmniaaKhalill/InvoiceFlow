// <auto-generated />
using System;
using InvoiceFlow.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvoiceFlow.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250803043904_UpdateInvoiceStructure")]
    partial class UpdateInvoiceStructure
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.Branch", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CityID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("CityID");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            BranchName = "فرع العبور",
                            CityID = 4L,
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 2L,
                            BranchName = "فرع الحي السابع",
                            CityID = 1L,
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 3L,
                            BranchName = "فرع عباس العقاد",
                            CityID = 1L,
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 4L,
                            BranchName = "فرع التجمع الاول",
                            CityID = 2L,
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 5L,
                            BranchName = "فرع سموحه",
                            CityID = 5L,
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 6L,
                            BranchName = "فرع الشروق",
                            CityID = 3L,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.Cashier", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("BranchID")
                        .HasColumnType("bigint");

                    b.Property<string>("CashierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.ToTable("Cashiers");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            BranchID = 2L,
                            CashierName = "محمد احمد",
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 2L,
                            BranchID = 3L,
                            CashierName = "محمود احمد ",
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 3L,
                            BranchID = 2L,
                            CashierName = "مصطفي عبد السميع",
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 4L,
                            BranchID = 6L,
                            CashierName = "احمد عبد الرحمن",
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 5L,
                            BranchID = 4L,
                            CashierName = "ساره عبد الله",
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 6L,
                            BranchID = 1L,
                            CashierName = "ساره محمد ",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.City", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CityName = "القاهرة - مدينة نصر",
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 2L,
                            CityName = "القاهرة - القاهرة الجديدة ",
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 3L,
                            CityName = "القاهرة - الشروق ",
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 4L,
                            CityName = "القاهرة - العبور ",
                            IsDeleted = false
                        },
                        new
                        {
                            ID = 5L,
                            CityName = "الاسكندرية - سموحة",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.InvoiceDetail", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("InvoiceHeaderID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("ItemCount")
                        .HasColumnType("float");

                    b.Property<long>("ItemID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("InvoiceHeaderID");

                    b.HasIndex("ItemID");

                    b.ToTable("InvoiceDetails");

                    b.HasData(
                        new
                        {
                            ID = 2L,
                            InvoiceHeaderID = 2L,
                            IsDeleted = false,
                            ItemCount = 2.0,
                            ItemID = 1L
                        },
                        new
                        {
                            ID = 3L,
                            InvoiceHeaderID = 2L,
                            IsDeleted = false,
                            ItemCount = 2.0,
                            ItemID = 2L
                        },
                        new
                        {
                            ID = 4L,
                            InvoiceHeaderID = 2L,
                            IsDeleted = false,
                            ItemCount = 1.0,
                            ItemID = 3L
                        },
                        new
                        {
                            ID = 6L,
                            InvoiceHeaderID = 3L,
                            IsDeleted = false,
                            ItemCount = 1.0,
                            ItemID = 4L
                        });
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.InvoiceHeader", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("BranchID")
                        .HasColumnType("bigint");

                    b.Property<long?>("CashierID")
                        .HasColumnType("bigint");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Invoicedate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("BranchID");

                    b.HasIndex("CashierID");

                    b.ToTable("InvoiceHeaders");

                    b.HasData(
                        new
                        {
                            ID = 2L,
                            BranchID = 2L,
                            CashierID = 1L,
                            CustomerName = "محمد عبد الله",
                            Invoicedate = new DateTime(2022, 2, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            TotalPrice = 150.0
                        },
                        new
                        {
                            ID = 3L,
                            BranchID = 3L,
                            CashierID = 2L,
                            CustomerName = "محمود احمد",
                            Invoicedate = new DateTime(2022, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDeleted = false,
                            TotalPrice = 5.0
                        });
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.Item", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            IsDeleted = false,
                            Name = "بيبسي 1 لتر",
                            Price = 20.0
                        },
                        new
                        {
                            ID = 2L,
                            IsDeleted = false,
                            Name = "ساندوتش برجر",
                            Price = 50.0
                        },
                        new
                        {
                            ID = 3L,
                            IsDeleted = false,
                            Name = "ايس كريم",
                            Price = 10.0
                        },
                        new
                        {
                            ID = 4L,
                            IsDeleted = false,
                            Name = "سفن اب كانز",
                            Price = 5.0
                        });
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.Branch", b =>
                {
                    b.HasOne("InvoiceFlow.Domain.Entities.City", "City")
                        .WithMany("Branches")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.Cashier", b =>
                {
                    b.HasOne("InvoiceFlow.Domain.Entities.Branch", "Branch")
                        .WithMany("Cashiers")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.InvoiceDetail", b =>
                {
                    b.HasOne("InvoiceFlow.Domain.Entities.InvoiceHeader", "InvoiceHeader")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceHeaderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceFlow.Domain.Entities.Item", "Item")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvoiceHeader");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.InvoiceHeader", b =>
                {
                    b.HasOne("InvoiceFlow.Domain.Entities.Branch", "Branch")
                        .WithMany("InvoiceHeaders")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvoiceFlow.Domain.Entities.Cashier", "Cashier")
                        .WithMany("InvoiceHeaders")
                        .HasForeignKey("CashierID");

                    b.Navigation("Branch");

                    b.Navigation("Cashier");
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.Branch", b =>
                {
                    b.Navigation("Cashiers");

                    b.Navigation("InvoiceHeaders");
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.Cashier", b =>
                {
                    b.Navigation("InvoiceHeaders");
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.City", b =>
                {
                    b.Navigation("Branches");
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.InvoiceHeader", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("InvoiceFlow.Domain.Entities.Item", b =>
                {
                    b.Navigation("InvoiceDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
